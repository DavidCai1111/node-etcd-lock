syntax = "proto3";
package etcdserverpb;

service KV {
  rpc Range(RangeRequest) returns (RangeResponse) {
    option (google.api.http) = {
      post: "/v3alpha/kv/range"
      body: "*"
    };
  }
}

service Lease {
  rpc LeaseGrant(LeaseGrantRequest) returns (LeaseGrantResponse) {
      option (google.api.http) = {
        post: "/v3alpha/lease/grant"
        body: "*"
    };
  }
}

message RangeRequest {
  enum SortOrder {
	  NONE = 0;
	  ASCEND = 1;
	  DESCEND = 2;
  }
  enum SortTarget {
	  KEY = 0;
	  VERSION = 1;
	  CREATE = 2;
	  MOD = 3;
	  VALUE = 4;
  }
  bytes key = 1;
  bytes range_end = 2;
  int64 limit = 3;
  int64 revision = 4;
  SortOrder sort_order = 5;
  SortTarget sort_target = 6;
  bool serializable = 7;
  bool keys_only = 8;
  bool count_only = 9;
  int64 min_mod_revision = 10;
  int64 max_mod_revision = 11;
  int64 min_create_revision = 12;
  int64 max_create_revision = 13;
}

message RangeResponse {
  ResponseHeader header = 1;
  repeated KeyValue kvs = 2;
  bool more = 3;
  int64 count = 4;
}

message LeaseGrantRequest {
  int64 TTL = 1;
  int64 ID = 2;
}

message LeaseGrantResponse {
  ResponseHeader header = 1;
  int64 ID = 2;
  int64 TTL = 3;
  string error = 4;
}

message ResponseHeader {
  uint64 cluster_id = 1;
  uint64 member_id = 2;
  int64 revision = 3;
  uint64 raft_term = 4;
}

message KeyValue {
  bytes key = 1;
  int64 create_revision = 2;
  int64 mod_revision = 3;
  int64 version = 4;
  bytes value = 5;
  int64 lease = 6;
}
